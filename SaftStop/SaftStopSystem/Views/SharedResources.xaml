<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SaftStopSystem">


    <DataTemplate DataType="{x:Type local:LoginViewModel}">
        <local:LoginView></local:LoginView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:FriendViewModel}">
        <local:FriendView></local:FriendView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:AccountViewModel}">
        <local:DisplayAccount></local:DisplayAccount>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:GameViewModel}">
        <local:GameView></local:GameView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:DeveloperViewModel}">
        <local:DeveloperView></local:DeveloperView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:PublisherViewModel}">
        <local:PublisherView></local:PublisherView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:MultiDeveloperViewModel}">
        <local:MultiDeveloperView></local:MultiDeveloperView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:StoreViewModel}">
        <local:StoreView></local:StoreView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:LibraryViewModel}">
        <local:LibraryView></local:LibraryView>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type local:MultiPublisherViewModel}">
        <local:MultiPublisherView></local:MultiPublisherView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:MultiAccountViewModel}">
        <local:MultiAccountView></local:MultiAccountView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:MultiFriendViewModel}">
        <local:MultiFriendView></local:MultiFriendView>
    </DataTemplate>

    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl IsSynchronizedWithCurrentItem="True" Margin="4" ItemsSource="{Binding}" Background="Transparent">
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <DockPanel>
                        <ContentPresenter Content="{Binding Path=DisplayName}" VerticalAlignment="Center"/>
                        <Button Content="X" Cursor="Hand" Margin="4,0,0,0" FontWeight="Bold" Height="16" Width="16" FontFamily="Didot" FontSize="9" DockPanel.Dock="Right" Command="{Binding Path=CloseCommand}"></Button>
                    </DockPanel>
                </DataTemplate>
            </TabControl.ItemTemplate>
        </TabControl>
    </DataTemplate>

    <Style x:Key="MainHeaderStyle" TargetType="{x:Type HeaderedContentControl}" >
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="{StaticResource Brush_HeaderBackground}" BorderBrush="White" BorderThickness="1" CornerRadius="5" Margin="4" Padding="4" SnapsToDevicePixels="True">
                        <TextBlock FontSize="14" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter DockPanel.Dock="Top" ContentSource="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" />
                        <ContentPresenter ContentSource="Content" ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl ItemsSource="{Binding}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Command="{Binding Path=Command}" Content="{Binding Path=DisplayName}" Style="{DynamicResource RoundCorner}" Foreground="#82d435" Background="Black" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>
    <DataTemplate x:Key="HorizontalCommandsTemplate">
        <ItemsControl ItemsSource="{Binding}" HorizontalAlignment="Right">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Command="{Binding Path=Command}" Content="{Binding Path=DisplayName}" Height="23" Width="85" Margin="4,4,0,0" Style="{DynamicResource RoundCorner}" Foreground="#82d435" Background="Black"  />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>
    <Style x:Key="ListViewStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Foreground" Value="#82d435"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
    </Style>
    <Style x:Key="ValidationStyleTextBox" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel LastChildFill="true">
                                <TextBlock Foreground="Red" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="5,0,0,0" Text="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}" />
                                <Border Background="Red" DockPanel.Dock="Right" Margin="5,0,0,0" Width="20" Height="20" CornerRadius="10">
                                    <TextBlock Text="!" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Foreground="White" />
                                </Border>
                                <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center">
                                    <Border BorderBrush="Red" BorderThickness="1" />
                                </AdornedElementPlaceholder>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RoundCorner" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="8" BorderBrush="Black" BorderThickness="2">
                            <Border.Background>
                                <RadialGradientBrush GradientOrigin="0.496,1.052">
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5" 
                                                        ScaleX="1.5" ScaleY="1.5"/>
                                            <TranslateTransform X="0.02" Y="0.3"/>
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <GradientStop Offset="1" Color="Black"/>
                                    <GradientStop Offset="0.3" Color="DarkGray"/>
                                </RadialGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                            </ContentPresenter>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#00000000" Offset="1"/>
                                        <GradientStop Color="#FF303030" Offset="0.3"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF33962B"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="PagingButton">
        <Setter Property="FontFamily" Value="Webdings"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Width" Value="45"/>
        <Setter Property="Margin" Value="4,0,4,0"/>
    </Style>

    <Style x:Key="PagingTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="4,0,4,0"/>
    </Style>
    
</ResourceDictionary>